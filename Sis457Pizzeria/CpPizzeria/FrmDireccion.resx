<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>